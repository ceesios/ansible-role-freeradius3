{{ ansible_managed | comment }}

{% set radiusd = freeradius.config.radiusd %}

prefix = /usr
exec_prefix = /usr
sysconfdir = /etc
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = /var/log/freeradius
raddbdir = /etc/freeradius
radacctdir = ${logdir}/radacct
name = freeradius
confdir = ${raddbdir}
modconfdir = ${confdir}/mods-config
certdir = ${confdir}/certs
cadir   = ${confdir}/certs
run_dir = ${localstatedir}/run/${name}
db_dir = ${raddbdir}
libdir = /usr/lib/freeradius
pidfile = ${run_dir}/${name}.pid
correct_escapes = true
max_request_time = 30
cleanup_delay = 5
max_requests = 16384
hostname_lookups = no
log {
	destination = files
	colourise = yes
	file = ${logdir}/radius.log
	syslog_facility = daemon
	stripped_names = no
	auth = no
	auth_badpass = no
	auth_goodpass = no
	msg_denied = "You are already logged in - access denied"
}
checkrad = ${sbindir}/checkrad
ENV {
}
security {
	user = freerad
	group = freerad
	allow_core_dumps = no
	max_attributes = 200
	reject_delay = 1
	status_server = yes
}
{% if "proxy" in freeradius.config %}
proxy_requests  = yes
$INCLUDE proxy.conf
{% endif %}

{% if "clients" in freeradius.config %}
$INCLUDE clients.conf
{% endif %}

thread pool {
	start_servers = {{ radiusd.thread_pool.start_servers }}
	max_servers = {{ radiusd.thread_pool.max_servers }}
	min_spare_servers = {{ radiusd.thread_pool.min_spare_servers }}
	max_spare_servers = {{ radiusd.thread_pool.max_spare_servers }}
	max_requests_per_server = {{ radiusd.thread_pool.max_requests_per_server }}
	auto_limit_acct = {{ radiusd.thread_pool.auto_limit_acct }}
	max_queue_size = {{ radiusd.thread_pool.max_queue_size }}
}
modules {
	$INCLUDE mods-enabled/
}
instantiate {
}
policy {
	$INCLUDE policy.d/
}
$INCLUDE sites-enabled/
