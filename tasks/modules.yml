---
- name: copy module configuration
  copy:
    src: "{{ item.value.config_file }}"
    dest: "{{ freeradius_conf_dir }}/mods-available/{{ item.key }}"
    mode: 0644
  with_dict: "{{ freeradius.modules }}"
  when:
    - item.value.disabled is undefined or (item.value.disabled is defined and not item.value.disabled)
    - item.value.config_file is defined
  notify: restart-radius
  tags: modules

- name: template module configuration
  template:
    src: "{{ item.value.config_template }}"
    dest: "{{ freeradius_conf_dir }}/mods-available/{{ item.key }}"
    mode: 0644
  with_dict: "{{ freeradius.modules }}"
  when:
    - item.value.disabled is undefined or (item.value.disabled is defined and not item.value.disabled)
    - item.value.config_template is defined
  notify: restart-radius
  tags: modules

- name: enable modules by symlinking them
  file:
    src: "../mods-available/{{ item.key }}"
    path: "{{ freeradius_conf_dir }}/mods-enabled/{{ item.key }}"
    state: link
  with_dict: "{{ freeradius.modules }}"
  when: item.value.disabled is undefined or (item.value.disabled is defined and not item.value.disabled)
  register: enable_mod_result
  notify: restart-radius
  tags: modules

- name: get contents of mods-enabled dir
  shell: "ls -1 {{ freeradius_conf_dir }}/mods-enabled/*"
  register: modsenabled_contents
  check_mode: no
  changed_when: false
  tags: modules

- debug:
    msg: "{{ enable_mod_result.results|selectattr('dest', 'string')|map(attribute='dest')|list }}"
  tags: modules

- name: delete old mods-enabled
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ modsenabled_contents.stdout_lines }}"
  when: item not in enable_mod_result.results|selectattr('dest', 'string')|map(attribute='dest')|list
  notify: restart-radius
  tags: modules
...